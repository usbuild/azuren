<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<instrumentationManifest xmlns="http://schemas.microsoft.com/win/2004/08/events">
  <instrumentation xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <events xmlns="http://schemas.microsoft.com/win/2004/08/events">
      <provider guid="{A77DCF21-545F-4191-B3D0-C396CF2683F2}" message="$(string.providermessage)" messageFileName="C:\Program Files\Microsoft SDKs\Windows Azure\.NET SDK\v2.1\bin\plugins\Caching\Microsoft.ApplicationServer.Caching.TracingEventDefinitions.dll" name="Microsoft-Windows Server AppFabric Caching TracingProvider" resourceFileName="C:\Program Files\Microsoft SDKs\Windows Azure\.NET SDK\v2.1\bin\plugins\Caching\Microsoft.ApplicationServer.Caching.TracingEventDefinitions.dll" symbol="TracingProvider">
        <channels>
          <importChannel chid="Microsoft-Windows-Application Server-System Services/Debug" name="Microsoft-Windows-Application Server-System Services/Debug"/>
        </channels>
        <!-- This task serves as the event GUID which represents a set of logical
        events that are logged by the provider -->
        <tasks>
          <task eventGUID="{D406518C-E017-4f4e-93A0-D6AACFC79E76}" name="Task" symbol="Task" value="1"/>
        </tasks>
        <!-- These opcodes serve as the eventType for the events. -->
        <opcodes>
          <opcode name="Opcode001" symbol="Opcode001" value="101"/>
          <opcode name="Opcode002" symbol="Opcode002" value="102"/>
          <opcode name="Opcode003" symbol="Opcode003" value="103"/>
          <opcode name="Opcode004" symbol="Opcode004" value="104"/>
          <opcode name="Opcode005" symbol="Opcode005" value="105"/>
        </opcodes>
        <!--Templates define event payloads.
        inType is the type of data that the provider logs to ETW session at run time. 
        outType is the type of data that a consumer tool uses to interprete the log.
        If outType is ommitted then it means it is the same as inType-->
        <templates>
          <template tid="StringTemplate">
            <data inType="win:UnicodeString" name="Source"/>
            <data inType="win:UnicodeString" name="Param"/>
          </template>
        </templates>
        <events>
          <event channel="Microsoft-Windows-Application Server-System Services/Debug" level="win:Verbose" message="$(string.event.101)" opcode="Opcode001" symbol="VerboseEvent" task="Task" template="StringTemplate" value="101"/>
          <event channel="Microsoft-Windows-Application Server-System Services/Debug" level="win:Informational" message="$(string.event.102)" opcode="Opcode002" symbol="InformationalEvent" task="Task" template="StringTemplate" value="102"/>
          <event channel="Microsoft-Windows-Application Server-System Services/Debug" level="win:Warning" message="$(string.event.103)" opcode="Opcode003" symbol="WarningEvent" task="Task" template="StringTemplate" value="103"/>
          <event channel="Microsoft-Windows-Application Server-System Services/Debug" level="win:Error" message="$(string.event.104)" opcode="Opcode004" symbol="ErrorEvent" task="Task" template="StringTemplate" value="104"/>
          <event channel="Microsoft-Windows-Application Server-System Services/Debug" level="win:Critical" message="$(string.event.105)" opcode="Opcode005" symbol="CriticalEvent" task="Task" template="StringTemplate" value="105"/>
        </events>
      </provider>
    </events>
  </instrumentation>
  <localization>
    <resources culture="en-US">
      <stringTable>
        <string id="event.101" value="%2"/>
        <string id="event.102" value="%2"/>
        <string id="event.103" value="%2"/>
        <string id="event.104" value="%2"/>
        <string id="event.105" value="%2"/>
        <string id="providermessage" value="Microsoft-Windows Server AppFabric Caching TracingProvider"/>
      </stringTable>
    </resources>
  </localization>
</instrumentationManifest>
